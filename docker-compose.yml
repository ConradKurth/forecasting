version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: forecasting_postgres
    environment:
      POSTGRES_DB: forecasting
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - forecast_postgres:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - forecasting_network

  redis:
    image: redis:7-alpine
    container_name: forecasting_redis
    ports:
      - "6379:6379"
    volumes:
      - forecast_redis:/data
    networks:
      - forecasting_network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: forecasting_backend
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/forecasting?sslmode=disable
      - REDIS_URL=redis:6379
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/tmp  # Don't mount tmp directory to avoid conflicts
    depends_on:
      - postgres
      - redis
    networks:
      - forecasting_network
    restart: unless-stopped

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev.worker
    container_name: forecasting_worker
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/forecasting?sslmode=disable
      - REDIS_URL=redis:6379
    volumes:
      - ./backend:/app
      - /app/tmp  # Don't mount tmp directory to avoid conflicts
    depends_on:
      - postgres
      - redis
    networks:
      - forecasting_network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: forecasting_frontend
    environment:
      - VITE_API_URL=http://localhost:3001
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Don't mount node_modules to avoid conflicts
    depends_on:
      - backend
    networks:
      - forecasting_network
    restart: unless-stopped

volumes:
  forecast_postgres:
  forecast_redis:

networks:
  forecasting_network:
    driver: bridge
